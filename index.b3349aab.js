!function(){const n=document.createElement("link").relList;if(!(n&&n.supports&&n.supports("modulepreload"))){for(const n of document.querySelectorAll('link[rel="modulepreload"]'))t(n);new MutationObserver((n=>{for(const e of n)if("childList"===e.type)for(const n of e.addedNodes)"LINK"===n.tagName&&"modulepreload"===n.rel&&t(n)})).observe(document,{childList:!0,subtree:!0})}function t(n){if(n.ep)return;n.ep=!0;const t=function(n){const t={};return n.integrity&&(t.integrity=n.integrity),n.referrerpolicy&&(t.referrerPolicy=n.referrerpolicy),"use-credentials"===n.crossorigin?t.credentials="include":"anonymous"===n.crossorigin?t.credentials="omit":t.credentials="same-origin",t}(n);fetch(n.href,t)}}();class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n      .container {\n        width: var(--size, 16px);\n        height: var(--size, 16px);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: url(ui/small-circle-button.png) no-repeat;\n        background-size: cover;\n      }\n\n      .container img {\n        width: var(--image-size, 11px);\n        height: var(--image-size, 11px);\n      }\n    "}connectedCallback(){var n;this.text=null!=(n=this.getAttribute("image"))?n:"notext",this.image="toolbar/small-"+this.text+".png",this.render()}render(){this.shadowRoot.innerHTML=`\n    <style>${n.styles}</style>\n    <div class="container">\n      <img src="${this.image}" alt="${this.text}">\n    </div>`}}customElements.define("image-circular-button",n);class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n      .container {\n        display: inline-flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .text {\n        font-family: Verdana;\n        font-size: 10.5px;\n        letter-spacing: -0.25px;\n        color: #434C4B;\n      }\n\n      .text span {\n        text-decoration: underline;\n      }\n    "}connectedCallback(){var n;this.image="toolbar/"+this.getAttribute("image")+".png",this.text=null!=(n=this.getAttribute("text"))?n:"Sin texto",this.bind=this.getAttribute("bind"),this.label=this.text.replace(this.bind,`<span>${this.bind}</span>`),this.render()}render(){this.shadowRoot.innerHTML=`\n    <style>${t.styles}</style>\n    <div class="container">\n      <img src="${this.image}" alt="${this.text}">\n      <div class="text">${this.label}</div>\n    </div>`}}customElements.define("image-button",t);class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n      .container {\n        width: 100%;\n        height: 100%;\n        border-radius: var(--border-radius) var(--border-radius) 0 0;\n\n        display: grid;\n        grid-template-columns: 310px 1fr;\n        position: relative;\n      }\n\n      .toolbar-container {\n        display: grid;\n        grid-template-columns: 40px 56px 44px 40px 54px 44px;\n        justify-content: flex-end;\n        align-items: center;\n        background: url(ui/toolbar-background.png) repeat;\n        background-size: contain;\n      }\n\n      .toolbar-small-container {\n        display: grid;\n        grid-template-columns: 50px 50px 37px 28px;\n        height: 100%;\n      }\n\n      .toolbar-small-container .left {\n        background: url(ui/small-toolbar-left-background.png) no-repeat;\n      }\n\n      .toolbar-small-container .center {\n        background:\n          url(ui/msn-logo.png) top left 4px,\n          url(ui/small-toolbar-center-background.png);\n        background-repeat: no-repeat, repeat-x;\n      }\n\n      .toolbar-small-container .right {\n        background: url(ui/small-toolbar-right-background.png) no-repeat;\n      }\n\n      .toolbar-small-container .end {\n        background: url(ui/small-toolbar-end-background.png) repeat;\n      }\n\n      .center .buttons {\n        display: flex;\n        gap: 0 4px;\n        transform: translate(2px, 23px);\n      }\n\n      .center image-circular-button {\n        --size: 19px;\n        --image-size: 13px;\n      }\n\n      .up-down {\n        --image-size: 15px;\n\n        position: absolute;\n        top: 2px;\n        left: 2px;\n      }\n\n    "}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML=`\n    <style>${e.styles}</style>\n    <div class="container">\n      <div class="toolbar-container">\n        <image-circular-button class="up-down" image="up-down"></image-circular-button>\n        <image-button image="invite" text="Invite" bind="I"></image-button>\n        <image-button image="send" text="Send Files" bind="l"></image-button>\n        <image-button image="video" text="Video" bind="o"></image-button>\n        <image-button image="voice" text="Voice" bind="c"></image-button>\n        <image-button image="activities" text="Activities" bind="v"></image-button>\n        <image-button image="games" text="Games" bind="G"></image-button>\n      </div>\n      <div class="toolbar-small-container">\n        <div class="left"></div>\n        <div class="center">\n          <div class="buttons">\n            <image-circular-button image="block"></image-circular-button>\n            <image-circular-button image="paint"></image-circular-button>\n          </div>\n        </div>\n        <div class="right"></div>\n        <div class="end"></div>\n      </div>\n    </div>`}}customElements.define("msn-messenger-toolbar",e);class s extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n      .container {\n        display: grid;\n        justify-content: center;\n        grid-template-columns: 1fr;\n        grid-template-rows: 28px 1fr;\n        font-family: Verdana;\n        font-size: 10px;\n        width: 97%;\n        height: 100%;\n        border: 1px solid #586170;\n        border-radius: 8px 8px 0 0;\n        margin: 2px 1px;\n      }\n\n      .subject {\n        border-radius: 8px 8px 0 0;\n        background: #EEF0FD;\n        display: flex;\n        align-items: center;\n        padding-left: 6px;\n        border-bottom: 1px solid #586170;\n      }\n\n      .subject strong {\n        padding-left: 3px;\n      }\n\n      .history {\n        background: #fff;\n      }\n    "}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML=`\n    <style>${s.styles}</style>\n    <div class="container">\n      <div class="subject">To: <strong>ManzDev (esemanztodoxulo@hotmail.com)</strong></div>\n      <div class="history"></div>\n    </div>`}}customElements.define("msn-messenger-history-chat",s);class i extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n      .container {\n        width: 114px;\n        height: 114px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n        border: 1px solid #586170;\n        border-radius: 8px;\n        position: relative;\n      }\n\n      .picture {\n        width: 96px;\n        height: 96px;\n        border: 1px solid #586170;\n        border-radius: 8px;\n        transform: translateY(4px);\n      }\n\n      .down {\n        border: 0;\n        background: transparent;\n        color: #4D5967;\n        transform: scaleY(0.5);\n        align-self: flex-end;\n      }\n\n      .expand {\n        position: absolute;\n        top: 4px;\n        right: -9px;\n      }\n    "}connectedCallback(){var n;this.image=null!=(n=this.getAttribute("image"))?n:"msn",this.render()}render(){this.shadowRoot.innerHTML=`\n    <style>${i.styles}</style>\n    <div class="container">\n      <img class="picture" src="avatars/${this.image}.png" alt="Avatar">\n      <button class="down">⯆</button>\n      <img class="expand" src="ui/expand-left.png" alt="expand arrow">\n    </div>\n    `}}customElements.define("msn-messenger-avatar",i);class r extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n    .container {\n      width: 100%;\n      height: 92%;\n      display: grid;\n      grid-template-columns: 1fr 140px;\n      margin: 4px 8px;\n    }\n    "}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML=`\n    <style>${r.styles}</style>\n    <div class="container">\n      <msn-messenger-history-chat></msn-messenger-history-chat>\n      <msn-messenger-avatar image="msn"></msn-messenger-avatar>\n    </div>`}}customElements.define("msn-messenger-remote-user",r);class a extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n      .container {\n        display: flex;\n        align-items: center;\n        padding: 0 6px;\n        height: 100%;\n      }\n\n      .container img {\n        height: 16px;\n      }\n\n      .container span:not(:empty) {\n        font-family: Verdana;\n        font-size: 10px;\n        color: #444;\n        display: inline-block;\n        width: 50px;\n        padding-left: 3px;\n      }\n\n      .container button {\n        border: 0;\n        background: transparent;\n        transform: scale(0.6);\n        padding: 0;\n      }\n    "}onClick(){"nudge"===this.text&&this.dispatchEvent(new CustomEvent("nudge",{bubbles:!0,composed:!0}))}connectedCallback(){var n;this.image="simple/"+this.getAttribute("image")+".png",this.text=this.getAttribute("image"),this.label=null!=(n=this.getAttribute("label"))?n:"",this.arrowButton=this.hasAttribute("arrow")?"<button>⯆</button>":"",this.render(),this.shadowRoot.querySelector(".container img").addEventListener("click",(()=>this.onClick()))}render(){this.shadowRoot.innerHTML=`\n    <style>${a.styles}</style>\n    <div class="container">\n      <img src="${this.image}" alt="${this.text}">\n      <span>${this.label}</span>\n      ${this.arrowButton}\n    </div>`}}customElements.define("simple-button",a);class o extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n      .container {\n        min-width: 25px;\n        height: 18px;\n        border: 1px solid #ABB0C6;\n        border-top: 0;\n        border-radius: 0 0 6px 6px;\n        display: flex;\n        justify-content: center;\n        background: #EDF2F8;\n      }\n\n      :host([focus]) .container {\n        background: #fff;\n        border-bottom: 3px solid #E2C47B;\n        border-top: 0;\n        transform: translateY(-1px);\n      }\n\n      img {\n        width: 16px;\n        height: 16px;\n      }\n    "}connectedCallback(){this.image="tabs/"+this.getAttribute("image")+".png",this.text=this.getAttribute("image"),this.render()}render(){this.shadowRoot.innerHTML=`\n    <style>${o.styles}</style>\n    <div class="container">\n      <img src="${this.image}" alt="${this.text}">\n    </div>`}}customElements.define("tab-button",o);class l extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n      .container {\n        display: grid;\n        grid-template-rows: 24px 1fr 24px;\n        min-height: 122px;\n        background: #fff;\n        width: 97%;\n        border: 1px solid #586170;\n        border-radius: 6px;\n      }\n\n      .actionbar,\n      .tabs {\n        background: linear-gradient(#D8E8F7, #F5F2F9, #D8E8F7);\n      }\n\n      .actionbar {\n        border-bottom: 1px solid #586170;\n        border-radius: 6px 6px 0 0;\n        display: flex;\n      }\n      .tabs {\n        border-top: 1px solid #565F70;\n        border-radius: 0 0 6px 6px;\n        display: flex;\n        justify-content: flex-end;\n        padding-right: 12px;\n      }\n\n      .chat {\n        display: flex;\n        justify-content: flex-end;\n        margin: 3px;\n      }\n\n      .chat .buttons {\n        display: flex;\n        flex-direction: column;\n        gap: 3px 0;\n      }\n\n      .normal {\n        border: 1px solid #93989C;\n        background: #FBFBFB;\n        box-shadow: -4px -4px 4px #C0C9E0 inset;\n        width: 58px;\n        height: 37px;\n        border-radius: 5px;\n        font-family: Tahoma;\n        font-weight: bold;\n        font-size: 11px;\n        color: #969C9A;\n      }\n\n      .normal span {\n        text-decoration: underline;\n      }\n\n      .normal.small {\n        height: 25px;\n      }\n    "}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML=`\n    <style>${l.styles}</style>\n    <div class="container">\n      <div class="actionbar">\n        <simple-button image="letter"></simple-button>\n        <simple-button image="happy" arrow></simple-button>\n        <simple-button image="voice-clip" label="Voice clip"></simple-button>\n        <simple-button image="wink" arrow></simple-button>\n        <simple-button image="mountain" arrow></simple-button>\n        <simple-button image="gift" arrow></simple-button>\n        <simple-button image="nudge"></simple-button>\n      </div>\n      <div class="chat">\n        <div class="buttons">\n          <button class="normal"><span>S</span>end</button>\n          <button class="small normal">Sea<span>r</span>ch</button>\n        </div>\n      </div>\n      <div class="tabs">\n        <tab-button image="paint"></tab-button>\n        <tab-button image="letter" focus></tab-button>\n      </div>\n    </div>`}}customElements.define("msn-messenger-chat",l);class d extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n    .container {\n      width: 100%;\n      height: 100%;\n      display: grid;\n      grid-template-columns: 1fr 140px;\n      margin: 4px 8px;\n    }\n    "}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML=`\n    <style>${d.styles}</style>\n    <div class="container">\n      <msn-messenger-chat></msn-messenger-chat>\n      <msn-messenger-avatar image="duck"></msn-messenger-avatar>\n    </div>`}}customElements.define("msn-messenger-local-user",d);class c extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n      .container {\n        width: 100%;\n        height: 14px;\n        border-radius: 0 0 var(--border-radius) var(--border-radius);\n        border-top: 1px solid #505E67;\n        background: #FDFDFF;\n        position: relative;\n        display: flex;\n        align-items: center;\n        padding-left: 8px;\n      }\n\n      .text {\n        font-family: Verdana;\n        font-size: 10px;\n        font-weight: bold;\n        color: navy;\n      }\n\n      .text a {\n        color: black;\n      }\n\n      .text a:hover {\n        color: darkred;\n      }\n    "}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML=`\n    <style>${c.styles}</style>\n    <div class="container">\n      <div class="text">More content on <a href="https://manz.dev/">https://manz.dev/</a> and <a href="https://twitch.tv/ManzDev">Twitch</a>!</div>\n    </div>`}}customElements.define("msn-messenger-statusbar",c);const m=new Audio("sounds/nudge.mp3");class p extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n      :host {\n        --width: 475px;\n        --height: 400px;\n        --border-radius: 6px;\n      }\n\n      .container {\n        width: var(--width);\n        height: var(--height);\n        background: #D7E4F5 url(ui/main-background.png) bottom 20px right no-repeat;\n        display: grid;\n        grid-template-rows: 60px 1fr 140px 24px;\n        border-radius: var(--border-radius);\n        overflow: hidden;\n        box-shadow:\n          2px 2px 5px #0009,\n          5px 5px 10px #000c;\n        position: relative;\n        transform: translate(var(--x, 0), var(--y, 0));\n      }\n\n      .border-window {\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background-image:\n            url(ui/main-corner-left.png),\n            url(ui/main-corner-right.png),\n            url(ui/main-left.png),\n            url(ui/main-right.png),\n            url(ui/main-bottom.png);\n          background-repeat: no-repeat, no-repeat, repeat-y, repeat-y, repeat-x;\n          background-position: bottom left, bottom -1px right, bottom left, bottom right, bottom;\n          clip-path: polygon(0 14.5%, 100% 5%, 100% 100%, 0 100%);\n          pointer-events: none;\n      }\n    "}move(){const n=~~(8*Math.random())-4,t=~~(8*Math.random())-4;this.style.setProperty("--x",`${n}px`),this.style.setProperty("--y",`${t}px`)}nudge(){const n=[50,100,150,200,250,350,400,450,500,550,600,650,700,750],t=(t=0)=>{setTimeout((()=>{m.currentTime=0,m.play(),n.forEach((n=>setTimeout((()=>this.move()),n)))}),t)};t(),t(1e3)}connectedCallback(){this.render(),this.addEventListener("nudge",(()=>this.nudge()))}render(){this.shadowRoot.innerHTML=`\n    <style>${p.styles}</style>\n    <div class="container">\n      <msn-messenger-toolbar></msn-messenger-toolbar>\n      <msn-messenger-remote-user></msn-messenger-remote-user>\n      <msn-messenger-local-user></msn-messenger-local-user>\n      <msn-messenger-statusbar></msn-messenger-statusbar>\n      <div class="border-window"></div>\n    </div>`}}customElements.define("msn-messenger-window",p);
